package com.develcode.avaliacao.usuario.controller;

import java.time.LocalDateTime;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.develcode.avaliacao.usuario.dto.UsuarioDTO;
import com.develcode.avaliacao.usuario.model.Usuario;
import com.develcode.avaliacao.usuario.service.UsuarioService;

@RestController
@RequestMapping("usuario")
public class UsuarioController {

	@Autowired
	private UsuarioService usuarioService;

	@GetMapping(value = "listar-um")
	public ResponseEntity<Object> buscarUsuarioPorCodigo(@RequestParam("codigo") Long codigo) {
		return usuarioService.findOne(codigo);
	}

	@GetMapping(value = "listar-todos")
	public ResponseEntity<List<Usuario>> listarTodosUsuarios() {
		return usuarioService.listarTodosUsuarios();
	}

//	@PostMapping(value = "cadastrar")
//	public ResponseEntity<Object> cadastrarUsuario(@RequestPart  @Valid UsuarioDTO usuarioDTO, @RequestParam("foto") MultipartFile file){
//		return usuarioService.cadastrar(usuarioDTO, file);
//	}

	@RequestMapping(path = "/cadastrar", method = RequestMethod.POST, consumes = { MediaType.MULTIPART_FORM_DATA_VALUE })
	public void cadastrarUsuario(@RequestBody @Valid UsuarioDTO usuarioDTO, @RequestParam("foto") MultipartFile file) {
		
		System.out.println(nome);
		System.out.println(dataNascimento);
		MultipartFile fili = file;
		
		//return usuarioService.cadastrar(usuarioDTO, file);
	}

	@PatchMapping(value = "atualizar")
	public ResponseEntity<Object> atualizarUsuario(@RequestBody @Valid UsuarioDTO usuarioDTO,	@RequestParam MultipartFile file) {
		return usuarioService.atualizar(usuarioDTO, file);
	}

	@DeleteMapping(value = "remover")
	public ResponseEntity<Object> removerUsuario(@RequestParam("codigo") Long codigo) {
		return usuarioService.deletar(codigo);
	}

}
